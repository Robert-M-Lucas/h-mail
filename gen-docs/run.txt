Processing PowFailureReason [pow]
Processing schema for PowFailureReason
Schema(
    Object {
        "$schema": String("https://json-schema.org/draft/2020-12/schema"),
        "description": String("Reason for a POW check failing"),
        "oneOf": Array [
            Object {
                "enum": Array [
                    String("FailedNoRetry"),
                    String("NotFoundCanRetry"),
                    String("BadRequestCanRetry"),
                ],
                "type": String("string"),
            },
            Object {
                "additionalProperties": Bool(false),
                "properties": Object {
                    "DoesNotMeetPolicyMinimum": Object {
                        "format": String("uint32"),
                        "minimum": Number(0),
                        "type": String("integer"),
                    },
                },
                "required": Array [
                    String("DoesNotMeetPolicyMinimum"),
                ],
                "type": String("object"),
            },
        ],
        "title": String("PowFailureReason"),
    },
)
# PowFailureReason

Reason for a POW check failing

## Schema

| Type | Constraints |
| --- | --- |
| `String` | One of: `FailedNoRetry`, `NotFoundCanRetry`, `BadRequestCanRetry` |

*OR*

| Property | Required | Type | Constraints |
| --- | --- | --- | --- |
| `DoesNotMeetPolicyMinimum` | ✅ | `Integer` | `uint32` - Bounds: [0, -] | 



Saving "generated/pow/PowFailureReason.md"
Processing PowPolicy [pow]
Processing schema for PowPolicy
Schema(
    Object {
        "$schema": String("https://json-schema.org/draft/2020-12/schema"),
        "description": String("Represents a user's pow policy that dictates how an incoming email is categorised"),
        "properties": Object {
            "accepted": Object {
                "format": String("uint32"),
                "minimum": Number(0),
                "type": String("integer"),
            },
            "minimum": Object {
                "format": String("uint32"),
                "minimum": Number(0),
                "type": String("integer"),
            },
            "personal": Object {
                "format": String("uint32"),
                "minimum": Number(0),
                "type": String("integer"),
            },
        },
        "required": Array [
            String("minimum"),
            String("accepted"),
            String("personal"),
        ],
        "title": String("PowPolicy"),
        "type": String("object"),
    },
)
# PowPolicy

Represents a user's pow policy that dictates how an incoming email is categorised

## Schema

| Property | Required | Type | Constraints |
| --- | --- | --- | --- |
| `accepted` | ✅ | `Integer` | `uint32` - Bounds: [0, -] | 
| `minimum` | ✅ | `Integer` | `uint32` - Bounds: [0, -] | 
| `personal` | ✅ | `Integer` | `uint32` - Bounds: [0, -] | 



Saving "generated/pow/PowPolicy.md"
Processing PowClassification [pow]
Processing schema for PowClassification
Schema(
    Object {
        "$schema": String("https://json-schema.org/draft/2020-12/schema"),
        "description": String("Represents a classification in the `PowPolicy`"),
        "enum": Array [
            String("Minimum"),
            String("Accepted"),
            String("Personal"),
        ],
        "title": String("PowClassification"),
        "type": String("string"),
    },
)
# PowClassification

Represents a classification in the `PowPolicy`

## Schema

| Type | Constraints |
| --- | --- |
| `String` | One of: `Minimum`, `Accepted`, `Personal` |


Saving "generated/pow/PowClassification.md"
Processing BigUintField [fields/big_uint]
Processing schema for BigUintField
Schema(
    Object {
        "$schema": String("https://json-schema.org/draft/2020-12/schema"),
        "description": String("A base-64 (standard alphabet, with padding) little-endian encoding of a large unsigned integer"),
        "title": String("BigUintField"),
        "type": String("string"),
    },
)
# BigUintField

A base-64 (standard alphabet, with padding) little-endian encoding of a large unsigned integer

## Schema

| Type | Constraints |
| --- | --- |
| `String` |   |


Saving "generated/fields/big_uint/BigUintField.md"
Processing SystemTimeField [fields/system_time]
Processing schema for SystemTimeField
Schema(
    Object {
        "$schema": String("https://json-schema.org/draft/2020-12/schema"),
        "description": String("A timestamp represented as milliseconds since epoch"),
        "format": String("uint128"),
        "minimum": Number(0),
        "title": String("SystemTimeField"),
        "type": String("integer"),
    },
)
# SystemTimeField

A timestamp represented as milliseconds since epoch

## Schema

| Type | Constraints |
| --- | --- |
| `Integer` | `uint128` - Bounds: [0, -] |


Saving "generated/fields/system_time/SystemTimeField.md"
Processing AuthTokenField [fields/auth_token]
Processing schema for AuthTokenField
Schema(
    Object {
        "$schema": String("https://json-schema.org/draft/2020-12/schema"),
        "description": String("Represents a base-64 encoded authentication token - you will not need to decode this.\nUsed in bearer tokens and in some requests."),
        "title": String("AuthTokenField"),
        "type": String("string"),
    },
)
# AuthTokenField

Represents a base-64 encoded authentication token - you will not need to decode this.
Used in bearer tokens and in some requests.

## Schema

| Type | Constraints |
| --- | --- |
| `String` |   |


Saving "generated/fields/auth_token/AuthTokenField.md"
Processing AuthTokenDataField [fields/auth_token]
Processing schema for AuthTokenDataField
Schema(
    Object {
        "$defs": Object {
            "AuthTokenField": Object {
                "description": String("Represents a base-64 encoded authentication token - you will not need to decode this.\nUsed in bearer tokens and in some requests."),
                "type": String("string"),
            },
            "SystemTimeField": Object {
                "description": String("A timestamp represented as milliseconds since epoch"),
                "format": String("uint128"),
                "minimum": Number(0),
                "type": String("integer"),
            },
        },
        "$schema": String("https://json-schema.org/draft/2020-12/schema"),
        "description": String("An `AuthToken` with attached expiry time"),
        "properties": Object {
            "expires_at": Object {
                "$ref": String("#/$defs/SystemTimeField"),
            },
            "token": Object {
                "$ref": String("#/$defs/AuthTokenField"),
            },
        },
        "required": Array [
            String("token"),
            String("expires_at"),
        ],
        "title": String("AuthTokenDataField"),
        "type": String("object"),
    },
)
# AuthTokenDataField

An `AuthToken` with attached expiry time

## Schema

| Property | Required | Type | Constraints |
| --- | --- | --- | --- |
| `expires_at` | ✅ | [[SystemTimeField]] |     | 
| `token` | ✅ | [[AuthTokenField]] |     | 



Saving "generated/fields/auth_token/AuthTokenDataField.md"
Processing EmailPackage [email]
Processing schema for EmailPackage
Schema(
    Object {
        "$schema": String("https://json-schema.org/draft/2020-12/schema"),
        "description": String("Represents an email being sent. The hash of this will be used for POW when sending emails."),
        "properties": Object {
            "contents": Object {
                "type": String("string"),
            },
            "destination_user": Object {
                "type": String("string"),
            },
        },
        "required": Array [
            String("destination_user"),
            String("contents"),
        ],
        "title": String("EmailPackage"),
        "type": String("object"),
    },
)
# EmailPackage

Represents an email being sent. The hash of this will be used for POW when sending emails.

## Schema

| Property | Required | Type | Constraints |
| --- | --- | --- | --- |
| `contents` | ✅ | `String` |     | 
| `destination_user` | ✅ | `String` |     | 



Saving "generated/email/EmailPackage.md"
Processing Email [email]
Processing schema for Email
Schema(
    Object {
        "$defs": Object {
            "BigUintField": Object {
                "description": String("A base-64 (standard alphabet, with padding) little-endian encoding of a large unsigned integer"),
                "type": String("string"),
            },
            "EmailPackage": Object {
                "description": String("Represents an email being sent. The hash of this will be used for POW when sending emails."),
                "properties": Object {
                    "contents": Object {
                        "type": String("string"),
                    },
                    "destination_user": Object {
                        "type": String("string"),
                    },
                },
                "required": Array [
                    String("destination_user"),
                    String("contents"),
                ],
                "type": String("object"),
            },
        },
        "$schema": String("https://json-schema.org/draft/2020-12/schema"),
        "description": String("A wrapper around a request requiring a proof-of-work (POW). The `token` is obtained from a\n`GetPowTokenRequest`. Some hash of `inner` is squared `iters` times (modulo `token`) to obtain\n`pow_result`.\n\nSee `inner`'s value for the underlying type."),
        "properties": Object {
            "inner": Object {
                "$ref": String("#/$defs/EmailPackage"),
            },
            "iters": Object {
                "format": String("uint32"),
                "minimum": Number(0),
                "type": String("integer"),
            },
            "pow_result": Object {
                "$ref": String("#/$defs/BigUintField"),
            },
            "token": Object {
                "$ref": String("#/$defs/BigUintField"),
            },
        },
        "required": Array [
            String("inner"),
            String("iters"),
            String("token"),
            String("pow_result"),
        ],
        "title": String("WithPow"),
        "type": String("object"),
    },
)
# Email (WithPow)

A wrapper around a request requiring a proof-of-work (POW). The `token` is obtained from a
`GetPowTokenRequest`. Some hash of `inner` is squared `iters` times (modulo `token`) to obtain
`pow_result`.

See `inner`'s value for the underlying type.

## Schema

| Property | Required | Type | Constraints |
| --- | --- | --- | --- |
| `inner` | ✅ | [[EmailPackage]] |     | 
| `iters` | ✅ | `Integer` | `uint32` - Bounds: [0, -] | 
| `pow_result` | ✅ | [[BigUintField]] |     | 
| `token` | ✅ | [[BigUintField]] |     | 



Saving "generated/email/Email.md"
Processing CheckPowPackage [routes/check_pow]
Processing schema for CheckPowPackage
Schema(
    Object {
        "$schema": String("https://json-schema.org/draft/2020-12/schema"),
        "description": String("POST: Utility function to check POW. Note that checking POW will invalidate the POW token,\npreventing it from being used for other purposes. The hash of `challenge` will be used as the\nhash for POW."),
        "properties": Object {
            "challenge": Object {
                "type": String("string"),
            },
        },
        "required": Array [
            String("challenge"),
        ],
        "title": String("CheckPowPackage"),
        "type": String("object"),
    },
)
# CheckPowPackage

POST: Utility function to check POW. Note that checking POW will invalidate the POW token,
preventing it from being used for other purposes. The hash of `challenge` will be used as the
hash for POW.

## Schema

| Property | Required | Type | Constraints |
| --- | --- | --- | --- |
| `challenge` | ✅ | `String` |     | 



Saving "generated/routes/check_pow/CheckPowPackage.md"
Processing CheckPowResponse [routes/check_pow]
Processing schema for CheckPowResponse
Schema(
    Object {
        "$defs": Object {
            "PowFailureReason": Object {
                "description": String("Reason for a POW check failing"),
                "oneOf": Array [
                    Object {
                        "enum": Array [
                            String("FailedNoRetry"),
                            String("NotFoundCanRetry"),
                            String("BadRequestCanRetry"),
                        ],
                        "type": String("string"),
                    },
                    Object {
                        "additionalProperties": Bool(false),
                        "properties": Object {
                            "DoesNotMeetPolicyMinimum": Object {
                                "format": String("uint32"),
                                "minimum": Number(0),
                                "type": String("integer"),
                            },
                        },
                        "required": Array [
                            String("DoesNotMeetPolicyMinimum"),
                        ],
                        "type": String("object"),
                    },
                ],
            },
        },
        "$schema": String("https://json-schema.org/draft/2020-12/schema"),
        "description": String("Returns whether the POW was solved correctly and, if not, why"),
        "oneOf": Array [
            Object {
                "enum": Array [
                    String("Success"),
                ],
                "type": String("string"),
            },
            Object {
                "additionalProperties": Bool(false),
                "properties": Object {
                    "Failure": Object {
                        "$ref": String("#/$defs/PowFailureReason"),
                    },
                },
                "required": Array [
                    String("Failure"),
                ],
                "type": String("object"),
            },
        ],
        "title": String("CheckPowResponse"),
    },
)
# CheckPowResponse

Returns whether the POW was solved correctly and, if not, why

## Schema

| Type | Constraints |
| --- | --- |
| `String` | One of: `Success` |

*OR*

| Property | Required | Type | Constraints |
| --- | --- | --- | --- |
| `Failure` | ✅ | [[PowFailureReason]] |     | 



Saving "generated/routes/check_pow/CheckPowResponse.md"
Processing CheckPowRequest [routes/check_pow]
Processing schema for CheckPowRequest
Schema(
    Object {
        "$defs": Object {
            "BigUintField": Object {
                "description": String("A base-64 (standard alphabet, with padding) little-endian encoding of a large unsigned integer"),
                "type": String("string"),
            },
            "CheckPowPackage": Object {
                "description": String("POST: Utility function to check POW. Note that checking POW will invalidate the POW token,\npreventing it from being used for other purposes. The hash of `challenge` will be used as the\nhash for POW."),
                "properties": Object {
                    "challenge": Object {
                        "type": String("string"),
                    },
                },
                "required": Array [
                    String("challenge"),
                ],
                "type": String("object"),
            },
        },
        "$schema": String("https://json-schema.org/draft/2020-12/schema"),
        "description": String("A wrapper around a request requiring a proof-of-work (POW). The `token` is obtained from a\n`GetPowTokenRequest`. Some hash of `inner` is squared `iters` times (modulo `token`) to obtain\n`pow_result`.\n\nSee `inner`'s value for the underlying type."),
        "properties": Object {
            "inner": Object {
                "$ref": String("#/$defs/CheckPowPackage"),
            },
            "iters": Object {
                "format": String("uint32"),
                "minimum": Number(0),
                "type": String("integer"),
            },
            "pow_result": Object {
                "$ref": String("#/$defs/BigUintField"),
            },
            "token": Object {
                "$ref": String("#/$defs/BigUintField"),
            },
        },
        "required": Array [
            String("inner"),
            String("iters"),
            String("token"),
            String("pow_result"),
        ],
        "title": String("WithPow"),
        "type": String("object"),
    },
)
# CheckPowRequest (WithPow)

A wrapper around a request requiring a proof-of-work (POW). The `token` is obtained from a
`GetPowTokenRequest`. Some hash of `inner` is squared `iters` times (modulo `token`) to obtain
`pow_result`.

See `inner`'s value for the underlying type.

## Schema

| Property | Required | Type | Constraints |
| --- | --- | --- | --- |
| `inner` | ✅ | [[CheckPowPackage]] |     | 
| `iters` | ✅ | `Integer` | `uint32` - Bounds: [0, -] | 
| `pow_result` | ✅ | [[BigUintField]] |     | 
| `token` | ✅ | [[BigUintField]] |     | 



Saving "generated/routes/check_pow/CheckPowRequest.md"
Processing GetUserPowPolicyRequest [routes/foreign/get_user_pow_policy]
Processing schema for GetUserPowPolicyRequest
Schema(
    Object {
        "$schema": String("https://json-schema.org/draft/2020-12/schema"),
        "description": String("GET: Requests a users POW policy"),
        "properties": Object {
            "destination": Object {
                "type": String("string"),
            },
        },
        "required": Array [
            String("destination"),
        ],
        "title": String("GetUserPowPolicyRequest"),
        "type": String("object"),
    },
)
# GetUserPowPolicyRequest

GET: Requests a users POW policy

## Schema

| Property | Required | Type | Constraints |
| --- | --- | --- | --- |
| `destination` | ✅ | `String` |     | 



Saving "generated/routes/foreign/get_user_pow_policy/GetUserPowPolicyRequest.md"
Processing GetUserPowPolicyResponse [routes/foreign/get_user_pow_policy]
Processing schema for GetUserPowPolicyResponse
Schema(
    Object {
        "$defs": Object {
            "PowPolicy": Object {
                "description": String("Represents a user's pow policy that dictates how an incoming email is categorised"),
                "properties": Object {
                    "accepted": Object {
                        "format": String("uint32"),
                        "minimum": Number(0),
                        "type": String("integer"),
                    },
                    "minimum": Object {
                        "format": String("uint32"),
                        "minimum": Number(0),
                        "type": String("integer"),
                    },
                    "personal": Object {
                        "format": String("uint32"),
                        "minimum": Number(0),
                        "type": String("integer"),
                    },
                },
                "required": Array [
                    String("minimum"),
                    String("accepted"),
                    String("personal"),
                ],
                "type": String("object"),
            },
        },
        "$schema": String("https://json-schema.org/draft/2020-12/schema"),
        "description": String("Returns the users POW policy, if they exist"),
        "properties": Object {
            "data": Object {
                "anyOf": Array [
                    Object {
                        "$ref": String("#/$defs/PowPolicy"),
                    },
                    Object {
                        "type": String("null"),
                    },
                ],
            },
        },
        "title": String("GetUserPowPolicyResponse"),
        "type": String("object"),
    },
)
# GetUserPowPolicyResponse

Returns the users POW policy, if they exist

## Schema

| Property | Required | Type | Constraints |
| --- | --- | --- | --- |
| `data` |     | [[PowPolicy]] |     | 



Saving "generated/routes/foreign/get_user_pow_policy/GetUserPowPolicyResponse.md"
Processing VerifyIpRequest [routes/foreign/verify_ip]
Processing schema for VerifyIpRequest
Schema(
    Object {
        "$defs": Object {
            "AuthTokenField": Object {
                "description": String("Represents a base-64 encoded authentication token - you will not need to decode this.\nUsed in bearer tokens and in some requests."),
                "type": String("string"),
            },
        },
        "$schema": String("https://json-schema.org/draft/2020-12/schema"),
        "description": String("POST: A `DeliverEmailRequest` will cause the target server to issue a `VerifyIpRequest` back\nto the sender to ensure the IP is not being spoofed. The `ip_verification` token verifies that\nthe IP belongs to the sender."),
        "properties": Object {
            "ip_verification": Object {
                "$ref": String("#/$defs/AuthTokenField"),
            },
        },
        "required": Array [
            String("ip_verification"),
        ],
        "title": String("VerifyIpRequest"),
        "type": String("object"),
    },
)
# VerifyIpRequest

POST: A `DeliverEmailRequest` will cause the target server to issue a `VerifyIpRequest` back
to the sender to ensure the IP is not being spoofed. The `ip_verification` token verifies that
the IP belongs to the sender.

## Schema

| Property | Required | Type | Constraints |
| --- | --- | --- | --- |
| `ip_verification` | ✅ | [[AuthTokenField]] |     | 



Saving "generated/routes/foreign/verify_ip/VerifyIpRequest.md"
Processing VerifyIpResponse [routes/foreign/verify_ip]
Processing schema for VerifyIpResponse
Schema(
    Object {
        "$schema": String("https://json-schema.org/draft/2020-12/schema"),
        "description": String("Returns whether the `DeliverEmailRequest` originated from this server"),
        "enum": Array [
            String("Success"),
            String("BadRequest"),
            String("Failure"),
        ],
        "title": String("VerifyIpResponse"),
        "type": String("string"),
    },
)
# VerifyIpResponse

Returns whether the `DeliverEmailRequest` originated from this server

## Schema

| Type | Constraints |
| --- | --- |
| `String` | One of: `Success`, `BadRequest`, `Failure` |


Saving "generated/routes/foreign/verify_ip/VerifyIpResponse.md"
Processing GetPowTokenRequest [routes/foreign/get_pow_token]
Processing schema for GetPowTokenRequest
Schema(
    Object {
        "$schema": String("https://json-schema.org/draft/2020-12/schema"),
        "description": String("GET: Request a POW token used for various purposes"),
        "title": String("GetPowTokenRequest"),
        "type": String("object"),
    },
)
# GetPowTokenRequest

GET: Request a POW token used for various purposes

## Schema

Empty object


Saving "generated/routes/foreign/get_pow_token/GetPowTokenRequest.md"
Processing GetPowTokenResponse [routes/foreign/get_pow_token]
Processing schema for GetPowTokenResponse
Schema(
    Object {
        "$defs": Object {
            "BigUintField": Object {
                "description": String("A base-64 (standard alphabet, with padding) little-endian encoding of a large unsigned integer"),
                "type": String("string"),
            },
            "SystemTimeField": Object {
                "description": String("A timestamp represented as milliseconds since epoch"),
                "format": String("uint128"),
                "minimum": Number(0),
                "type": String("integer"),
            },
        },
        "$schema": String("https://json-schema.org/draft/2020-12/schema"),
        "description": String("Returns a POW token"),
        "properties": Object {
            "expires_at": Object {
                "$ref": String("#/$defs/SystemTimeField"),
            },
            "token": Object {
                "$ref": String("#/$defs/BigUintField"),
            },
        },
        "required": Array [
            String("token"),
            String("expires_at"),
        ],
        "title": String("GetPowTokenResponse"),
        "type": String("object"),
    },
)
# GetPowTokenResponse

Returns a POW token

## Schema

| Property | Required | Type | Constraints |
| --- | --- | --- | --- |
| `expires_at` | ✅ | [[SystemTimeField]] |     | 
| `token` | ✅ | [[BigUintField]] |     | 



Saving "generated/routes/foreign/get_pow_token/GetPowTokenResponse.md"
Processing DeliverEmailRequest [routes/foreign/deliver_email]
Processing schema for DeliverEmailRequest
Schema(
    Object {
        "$defs": Object {
            "AuthTokenDataField": Object {
                "description": String("An `AuthToken` with attached expiry time"),
                "properties": Object {
                    "expires_at": Object {
                        "$ref": String("#/$defs/SystemTimeField"),
                    },
                    "token": Object {
                        "$ref": String("#/$defs/AuthTokenField"),
                    },
                },
                "required": Array [
                    String("token"),
                    String("expires_at"),
                ],
                "type": String("object"),
            },
            "AuthTokenField": Object {
                "description": String("Represents a base-64 encoded authentication token - you will not need to decode this.\nUsed in bearer tokens and in some requests."),
                "type": String("string"),
            },
            "BigUintField": Object {
                "description": String("A base-64 (standard alphabet, with padding) little-endian encoding of a large unsigned integer"),
                "type": String("string"),
            },
            "EmailPackage": Object {
                "description": String("Represents an email being sent. The hash of this will be used for POW when sending emails."),
                "properties": Object {
                    "contents": Object {
                        "type": String("string"),
                    },
                    "destination_user": Object {
                        "type": String("string"),
                    },
                },
                "required": Array [
                    String("destination_user"),
                    String("contents"),
                ],
                "type": String("object"),
            },
            "SystemTimeField": Object {
                "description": String("A timestamp represented as milliseconds since epoch"),
                "format": String("uint128"),
                "minimum": Number(0),
                "type": String("integer"),
            },
            "WithPow": Object {
                "description": String("A wrapper around a request requiring a proof-of-work (POW). The `token` is obtained from a\n`GetPowTokenRequest`. Some hash of `inner` is squared `iters` times (modulo `token`) to obtain\n`pow_result`.\n\nSee `inner`'s value for the underlying type."),
                "properties": Object {
                    "inner": Object {
                        "$ref": String("#/$defs/EmailPackage"),
                    },
                    "iters": Object {
                        "format": String("uint32"),
                        "minimum": Number(0),
                        "type": String("integer"),
                    },
                    "pow_result": Object {
                        "$ref": String("#/$defs/BigUintField"),
                    },
                    "token": Object {
                        "$ref": String("#/$defs/BigUintField"),
                    },
                },
                "required": Array [
                    String("inner"),
                    String("iters"),
                    String("token"),
                    String("pow_result"),
                ],
                "type": String("object"),
            },
        },
        "$schema": String("https://json-schema.org/draft/2020-12/schema"),
        "description": String("POST: Delivers an email from another server. The `ip_verification` token will be used in a\n`VerifyIpRequest` to the `source_domain` on port `verify_ip_port` to ensure that the IP\nis not being spoofed. Requires POW (in `email`) for which the hash of\n`Email->inner (EmailPackage)` will be used as the POW hash."),
        "properties": Object {
            "email": Object {
                "$ref": String("#/$defs/WithPow"),
            },
            "ip_verification": Object {
                "$ref": String("#/$defs/AuthTokenDataField"),
            },
            "source_domain": Object {
                "type": String("string"),
            },
            "source_user": Object {
                "type": String("string"),
            },
            "verify_ip_port": Object {
                "format": String("uint16"),
                "maximum": Number(65535),
                "minimum": Number(0),
                "type": String("integer"),
            },
        },
        "required": Array [
            String("email"),
            String("source_user"),
            String("source_domain"),
            String("ip_verification"),
            String("verify_ip_port"),
        ],
        "title": String("DeliverEmailRequest"),
        "type": String("object"),
    },
)
# DeliverEmailRequest

POST: Delivers an email from another server. The `ip_verification` token will be used in a
`VerifyIpRequest` to the `source_domain` on port `verify_ip_port` to ensure that the IP
is not being spoofed. Requires POW (in `email`) for which the hash of
`Email->inner (EmailPackage)` will be used as the POW hash.

## Schema

| Property | Required | Type | Constraints |
| --- | --- | --- | --- |
| `email` | ✅ | [[WithPow]]\<[[None]]\> |     | 
| `ip_verification` | ✅ | [[AuthTokenDataField]] |     | 
| `source_domain` | ✅ | `String` |     | 
| `source_user` | ✅ | `String` |     | 
| `verify_ip_port` | ✅ | `Integer` | `uint16` - Bounds: [0, 65535] | 



Saving "generated/routes/foreign/deliver_email/DeliverEmailRequest.md"
Processing DeliverEmailResponse [routes/foreign/deliver_email]
Processing schema for DeliverEmailResponse
Schema(
    Object {
        "$defs": Object {
            "PowFailureReason": Object {
                "description": String("Reason for a POW check failing"),
                "oneOf": Array [
                    Object {
                        "enum": Array [
                            String("FailedNoRetry"),
                            String("NotFoundCanRetry"),
                            String("BadRequestCanRetry"),
                        ],
                        "type": String("string"),
                    },
                    Object {
                        "additionalProperties": Bool(false),
                        "properties": Object {
                            "DoesNotMeetPolicyMinimum": Object {
                                "format": String("uint32"),
                                "minimum": Number(0),
                                "type": String("integer"),
                            },
                        },
                        "required": Array [
                            String("DoesNotMeetPolicyMinimum"),
                        ],
                        "type": String("object"),
                    },
                ],
            },
            "PowPolicy": Object {
                "description": String("Represents a user's pow policy that dictates how an incoming email is categorised"),
                "properties": Object {
                    "accepted": Object {
                        "format": String("uint32"),
                        "minimum": Number(0),
                        "type": String("integer"),
                    },
                    "minimum": Object {
                        "format": String("uint32"),
                        "minimum": Number(0),
                        "type": String("integer"),
                    },
                    "personal": Object {
                        "format": String("uint32"),
                        "minimum": Number(0),
                        "type": String("integer"),
                    },
                },
                "required": Array [
                    String("minimum"),
                    String("accepted"),
                    String("personal"),
                ],
                "type": String("object"),
            },
        },
        "$schema": String("https://json-schema.org/draft/2020-12/schema"),
        "description": String("Returns whether the email delivery succeeded and, if not, why"),
        "oneOf": Array [
            Object {
                "enum": Array [
                    String("Success"),
                    String("UserNotFound"),
                    String("BadRequest"),
                    String("SenderIpNotAuthed"),
                ],
                "type": String("string"),
            },
            Object {
                "additionalProperties": Bool(false),
                "properties": Object {
                    "DoesNotMeetPolicy": Object {
                        "$ref": String("#/$defs/PowPolicy"),
                    },
                },
                "required": Array [
                    String("DoesNotMeetPolicy"),
                ],
                "type": String("object"),
            },
            Object {
                "additionalProperties": Bool(false),
                "properties": Object {
                    "PowFailure": Object {
                        "$ref": String("#/$defs/PowFailureReason"),
                    },
                },
                "required": Array [
                    String("PowFailure"),
                ],
                "type": String("object"),
            },
        ],
        "title": String("DeliverEmailResponse"),
    },
)
# DeliverEmailResponse

Returns whether the email delivery succeeded and, if not, why

## Schema

| Type | Constraints |
| --- | --- |
| `String` | One of: `Success`, `UserNotFound`, `BadRequest`, `SenderIpNotAuthed` |

*OR*

| Property | Required | Type | Constraints |
| --- | --- | --- | --- |
| `DoesNotMeetPolicy` | ✅ | [[PowPolicy]] |     | 


*OR*

| Property | Required | Type | Constraints |
| --- | --- | --- | --- |
| `PowFailure` | ✅ | [[PowFailureReason]] |     | 



Saving "generated/routes/foreign/deliver_email/DeliverEmailResponse.md"
Processing CreateAccountPackage [routes/native/create_account]
Processing schema for CreateAccountPackage
Schema(
    Object {
        "$schema": String("https://json-schema.org/draft/2020-12/schema"),
        "description": String("POST: Requests an account be created. Requires POW burden obtained through\n`GetCreateAccountPowPolicyRequest`. The hash of `username` will be used for the POW hash."),
        "properties": Object {
            "password": Object {
                "type": String("string"),
            },
            "username": Object {
                "type": String("string"),
            },
        },
        "required": Array [
            String("username"),
            String("password"),
        ],
        "title": String("CreateAccountPackage"),
        "type": String("object"),
    },
)
# CreateAccountPackage

POST: Requests an account be created. Requires POW burden obtained through
`GetCreateAccountPowPolicyRequest`. The hash of `username` will be used for the POW hash.

## Schema

| Property | Required | Type | Constraints |
| --- | --- | --- | --- |
| `password` | ✅ | `String` |     | 
| `username` | ✅ | `String` |     | 



Saving "generated/routes/native/create_account/CreateAccountPackage.md"
Processing CreateAccountResponse [routes/native/create_account]
Processing schema for CreateAccountResponse
Schema(
    Object {
        "$defs": Object {
            "PowFailureReason": Object {
                "description": String("Reason for a POW check failing"),
                "oneOf": Array [
                    Object {
                        "enum": Array [
                            String("FailedNoRetry"),
                            String("NotFoundCanRetry"),
                            String("BadRequestCanRetry"),
                        ],
                        "type": String("string"),
                    },
                    Object {
                        "additionalProperties": Bool(false),
                        "properties": Object {
                            "DoesNotMeetPolicyMinimum": Object {
                                "format": String("uint32"),
                                "minimum": Number(0),
                                "type": String("integer"),
                            },
                        },
                        "required": Array [
                            String("DoesNotMeetPolicyMinimum"),
                        ],
                        "type": String("object"),
                    },
                ],
            },
        },
        "$schema": String("https://json-schema.org/draft/2020-12/schema"),
        "description": String("Returns whether the account creation succeeded and, if not, why"),
        "oneOf": Array [
            Object {
                "enum": Array [
                    String("Success"),
                    String("BadUsername"),
                    String("UsernameInUse"),
                    String("BadPassword"),
                ],
                "type": String("string"),
            },
            Object {
                "additionalProperties": Bool(false),
                "properties": Object {
                    "DoesNotMeetPolicy": Object {
                        "format": String("uint32"),
                        "minimum": Number(0),
                        "type": String("integer"),
                    },
                },
                "required": Array [
                    String("DoesNotMeetPolicy"),
                ],
                "type": String("object"),
            },
            Object {
                "additionalProperties": Bool(false),
                "properties": Object {
                    "PowFailure": Object {
                        "$ref": String("#/$defs/PowFailureReason"),
                    },
                },
                "required": Array [
                    String("PowFailure"),
                ],
                "type": String("object"),
            },
        ],
        "title": String("CreateAccountResponse"),
    },
)
# CreateAccountResponse

Returns whether the account creation succeeded and, if not, why

## Schema

| Type | Constraints |
| --- | --- |
| `String` | One of: `Success`, `BadUsername`, `UsernameInUse`, `BadPassword` |

*OR*

| Property | Required | Type | Constraints |
| --- | --- | --- | --- |
| `DoesNotMeetPolicy` | ✅ | `Integer` | `uint32` - Bounds: [0, -] | 


*OR*

| Property | Required | Type | Constraints |
| --- | --- | --- | --- |
| `PowFailure` | ✅ | [[PowFailureReason]] |     | 



Saving "generated/routes/native/create_account/CreateAccountResponse.md"
Processing CreateAccountRequest [routes/native/create_account]
Processing schema for CreateAccountRequest
Schema(
    Object {
        "$defs": Object {
            "BigUintField": Object {
                "description": String("A base-64 (standard alphabet, with padding) little-endian encoding of a large unsigned integer"),
                "type": String("string"),
            },
            "CreateAccountPackage": Object {
                "description": String("POST: Requests an account be created. Requires POW burden obtained through\n`GetCreateAccountPowPolicyRequest`. The hash of `username` will be used for the POW hash."),
                "properties": Object {
                    "password": Object {
                        "type": String("string"),
                    },
                    "username": Object {
                        "type": String("string"),
                    },
                },
                "required": Array [
                    String("username"),
                    String("password"),
                ],
                "type": String("object"),
            },
        },
        "$schema": String("https://json-schema.org/draft/2020-12/schema"),
        "description": String("A wrapper around a request requiring a proof-of-work (POW). The `token` is obtained from a\n`GetPowTokenRequest`. Some hash of `inner` is squared `iters` times (modulo `token`) to obtain\n`pow_result`.\n\nSee `inner`'s value for the underlying type."),
        "properties": Object {
            "inner": Object {
                "$ref": String("#/$defs/CreateAccountPackage"),
            },
            "iters": Object {
                "format": String("uint32"),
                "minimum": Number(0),
                "type": String("integer"),
            },
            "pow_result": Object {
                "$ref": String("#/$defs/BigUintField"),
            },
            "token": Object {
                "$ref": String("#/$defs/BigUintField"),
            },
        },
        "required": Array [
            String("inner"),
            String("iters"),
            String("token"),
            String("pow_result"),
        ],
        "title": String("WithPow"),
        "type": String("object"),
    },
)
# CreateAccountRequest (WithPow)

A wrapper around a request requiring a proof-of-work (POW). The `token` is obtained from a
`GetPowTokenRequest`. Some hash of `inner` is squared `iters` times (modulo `token`) to obtain
`pow_result`.

See `inner`'s value for the underlying type.

## Schema

| Property | Required | Type | Constraints |
| --- | --- | --- | --- |
| `inner` | ✅ | [[CreateAccountPackage]] |     | 
| `iters` | ✅ | `Integer` | `uint32` - Bounds: [0, -] | 
| `pow_result` | ✅ | [[BigUintField]] |     | 
| `token` | ✅ | [[BigUintField]] |     | 



Saving "generated/routes/native/create_account/CreateAccountRequest.md"
Processing SendEmailRequest [routes/native/send_email]
Processing schema for SendEmailRequest
Schema(
    Object {
        "$defs": Object {
            "BigUintField": Object {
                "description": String("A base-64 (standard alphabet, with padding) little-endian encoding of a large unsigned integer"),
                "type": String("string"),
            },
            "EmailPackage": Object {
                "description": String("Represents an email being sent. The hash of this will be used for POW when sending emails."),
                "properties": Object {
                    "contents": Object {
                        "type": String("string"),
                    },
                    "destination_user": Object {
                        "type": String("string"),
                    },
                },
                "required": Array [
                    String("destination_user"),
                    String("contents"),
                ],
                "type": String("object"),
            },
            "WithPow": Object {
                "description": String("A wrapper around a request requiring a proof-of-work (POW). The `token` is obtained from a\n`GetPowTokenRequest`. Some hash of `inner` is squared `iters` times (modulo `token`) to obtain\n`pow_result`.\n\nSee `inner`'s value for the underlying type."),
                "properties": Object {
                    "inner": Object {
                        "$ref": String("#/$defs/EmailPackage"),
                    },
                    "iters": Object {
                        "format": String("uint32"),
                        "minimum": Number(0),
                        "type": String("integer"),
                    },
                    "pow_result": Object {
                        "$ref": String("#/$defs/BigUintField"),
                    },
                    "token": Object {
                        "$ref": String("#/$defs/BigUintField"),
                    },
                },
                "required": Array [
                    String("inner"),
                    String("iters"),
                    String("token"),
                    String("pow_result"),
                ],
                "type": String("object"),
            },
        },
        "$schema": String("https://json-schema.org/draft/2020-12/schema"),
        "description": String("POST: Requests the server sends an email to another server\n\nAUTH: Requires an access token as the bearer token"),
        "properties": Object {
            "destination_domain": Object {
                "type": String("string"),
            },
            "email": Object {
                "$ref": String("#/$defs/WithPow"),
            },
        },
        "required": Array [
            String("email"),
            String("destination_domain"),
        ],
        "title": String("SendEmailRequest"),
        "type": String("object"),
    },
)
# SendEmailRequest

POST: Requests the server sends an email to another server

AUTH: Requires an access token as the bearer token

## Schema

| Property | Required | Type | Constraints |
| --- | --- | --- | --- |
| `destination_domain` | ✅ | `String` |     | 
| `email` | ✅ | [[WithPow]]\<[[None]]\> |     | 



Saving "generated/routes/native/send_email/SendEmailRequest.md"
Processing SendEmailResponseAuthed [routes/native/send_email]
Processing schema for SendEmailResponseAuthed
Schema(
    Object {
        "$defs": Object {
            "DeliverEmailResponse": Object {
                "description": String("Returns whether the email delivery succeeded and, if not, why"),
                "oneOf": Array [
                    Object {
                        "enum": Array [
                            String("Success"),
                            String("UserNotFound"),
                            String("BadRequest"),
                            String("SenderIpNotAuthed"),
                        ],
                        "type": String("string"),
                    },
                    Object {
                        "additionalProperties": Bool(false),
                        "properties": Object {
                            "DoesNotMeetPolicy": Object {
                                "$ref": String("#/$defs/PowPolicy"),
                            },
                        },
                        "required": Array [
                            String("DoesNotMeetPolicy"),
                        ],
                        "type": String("object"),
                    },
                    Object {
                        "additionalProperties": Bool(false),
                        "properties": Object {
                            "PowFailure": Object {
                                "$ref": String("#/$defs/PowFailureReason"),
                            },
                        },
                        "required": Array [
                            String("PowFailure"),
                        ],
                        "type": String("object"),
                    },
                ],
            },
            "PowFailureReason": Object {
                "description": String("Reason for a POW check failing"),
                "oneOf": Array [
                    Object {
                        "enum": Array [
                            String("FailedNoRetry"),
                            String("NotFoundCanRetry"),
                            String("BadRequestCanRetry"),
                        ],
                        "type": String("string"),
                    },
                    Object {
                        "additionalProperties": Bool(false),
                        "properties": Object {
                            "DoesNotMeetPolicyMinimum": Object {
                                "format": String("uint32"),
                                "minimum": Number(0),
                                "type": String("integer"),
                            },
                        },
                        "required": Array [
                            String("DoesNotMeetPolicyMinimum"),
                        ],
                        "type": String("object"),
                    },
                ],
            },
            "PowPolicy": Object {
                "description": String("Represents a user's pow policy that dictates how an incoming email is categorised"),
                "properties": Object {
                    "accepted": Object {
                        "format": String("uint32"),
                        "minimum": Number(0),
                        "type": String("integer"),
                    },
                    "minimum": Object {
                        "format": String("uint32"),
                        "minimum": Number(0),
                        "type": String("integer"),
                    },
                    "personal": Object {
                        "format": String("uint32"),
                        "minimum": Number(0),
                        "type": String("integer"),
                    },
                },
                "required": Array [
                    String("minimum"),
                    String("accepted"),
                    String("personal"),
                ],
                "type": String("object"),
            },
        },
        "$schema": String("https://json-schema.org/draft/2020-12/schema"),
        "description": String("Returns whether sending the email succeeded and, if not, why"),
        "oneOf": Array [
            Object {
                "enum": Array [
                    String("SendingFailed"),
                ],
                "type": String("string"),
            },
            Object {
                "additionalProperties": Bool(false),
                "properties": Object {
                    "DeliverResponse": Object {
                        "$ref": String("#/$defs/DeliverEmailResponse"),
                    },
                },
                "required": Array [
                    String("DeliverResponse"),
                ],
                "type": String("object"),
            },
        ],
        "title": String("SendEmailResponseAuthed"),
    },
)
# SendEmailResponseAuthed

Returns whether sending the email succeeded and, if not, why

## Schema

| Type | Constraints |
| --- | --- |
| `String` | One of: `SendingFailed` |

*OR*

| Property | Required | Type | Constraints |
| --- | --- | --- | --- |
| `DeliverResponse` | ✅ | [[DeliverEmailResponse]] |     | 



Saving "generated/routes/native/send_email/SendEmailResponseAuthed.md"
Processing SendEmailResponse [routes/native/send_email]
Processing schema for SendEmailResponse
Schema(
    Object {
        "$defs": Object {
            "DeliverEmailResponse": Object {
                "description": String("Returns whether the email delivery succeeded and, if not, why"),
                "oneOf": Array [
                    Object {
                        "enum": Array [
                            String("Success"),
                            String("UserNotFound"),
                            String("BadRequest"),
                            String("SenderIpNotAuthed"),
                        ],
                        "type": String("string"),
                    },
                    Object {
                        "additionalProperties": Bool(false),
                        "properties": Object {
                            "DoesNotMeetPolicy": Object {
                                "$ref": String("#/$defs/PowPolicy"),
                            },
                        },
                        "required": Array [
                            String("DoesNotMeetPolicy"),
                        ],
                        "type": String("object"),
                    },
                    Object {
                        "additionalProperties": Bool(false),
                        "properties": Object {
                            "PowFailure": Object {
                                "$ref": String("#/$defs/PowFailureReason"),
                            },
                        },
                        "required": Array [
                            String("PowFailure"),
                        ],
                        "type": String("object"),
                    },
                ],
            },
            "PowFailureReason": Object {
                "description": String("Reason for a POW check failing"),
                "oneOf": Array [
                    Object {
                        "enum": Array [
                            String("FailedNoRetry"),
                            String("NotFoundCanRetry"),
                            String("BadRequestCanRetry"),
                        ],
                        "type": String("string"),
                    },
                    Object {
                        "additionalProperties": Bool(false),
                        "properties": Object {
                            "DoesNotMeetPolicyMinimum": Object {
                                "format": String("uint32"),
                                "minimum": Number(0),
                                "type": String("integer"),
                            },
                        },
                        "required": Array [
                            String("DoesNotMeetPolicyMinimum"),
                        ],
                        "type": String("object"),
                    },
                ],
            },
            "PowPolicy": Object {
                "description": String("Represents a user's pow policy that dictates how an incoming email is categorised"),
                "properties": Object {
                    "accepted": Object {
                        "format": String("uint32"),
                        "minimum": Number(0),
                        "type": String("integer"),
                    },
                    "minimum": Object {
                        "format": String("uint32"),
                        "minimum": Number(0),
                        "type": String("integer"),
                    },
                    "personal": Object {
                        "format": String("uint32"),
                        "minimum": Number(0),
                        "type": String("integer"),
                    },
                },
                "required": Array [
                    String("minimum"),
                    String("accepted"),
                    String("personal"),
                ],
                "type": String("object"),
            },
            "SendEmailResponseAuthed": Object {
                "description": String("Returns whether sending the email succeeded and, if not, why"),
                "oneOf": Array [
                    Object {
                        "enum": Array [
                            String("SendingFailed"),
                        ],
                        "type": String("string"),
                    },
                    Object {
                        "additionalProperties": Bool(false),
                        "properties": Object {
                            "DeliverResponse": Object {
                                "$ref": String("#/$defs/DeliverEmailResponse"),
                            },
                        },
                        "required": Array [
                            String("DeliverResponse"),
                        ],
                        "type": String("object"),
                    },
                ],
            },
        },
        "$schema": String("https://json-schema.org/draft/2020-12/schema"),
        "description": String("A wrapper around a response indicating whether a request that requires authorisation was\nsuccessful.\n\nSee `Success`'s value for the underlying type."),
        "oneOf": Array [
            Object {
                "enum": Array [
                    String("Unauthorized"),
                ],
                "type": String("string"),
            },
            Object {
                "additionalProperties": Bool(false),
                "properties": Object {
                    "Success": Object {
                        "$ref": String("#/$defs/SendEmailResponseAuthed"),
                    },
                },
                "required": Array [
                    String("Success"),
                ],
                "type": String("object"),
            },
        ],
        "title": String("Authorized"),
    },
)
# SendEmailResponse (Authorized)

A wrapper around a response indicating whether a request that requires authorisation was
successful.

See `Success`'s value for the underlying type.

## Schema

| Type | Constraints |
| --- | --- |
| `String` | One of: `Unauthorized` |

*OR*

| Property | Required | Type | Constraints |
| --- | --- | --- | --- |
| `Success` | ✅ | [[SendEmailResponseAuthed]] |     | 



Saving "generated/routes/native/send_email/SendEmailResponse.md"
Processing GetCreateAccountPowPolicyRequest [routes/native/get_create_account_pow_policy]
Processing schema for GetCreateAccountPowPolicyRequest
Schema(
    Object {
        "$schema": String("https://json-schema.org/draft/2020-12/schema"),
        "description": String("GET: Requests the number of POW iterations required to create an account"),
        "title": String("GetCreateAccountPowPolicyRequest"),
        "type": String("object"),
    },
)
# GetCreateAccountPowPolicyRequest

GET: Requests the number of POW iterations required to create an account

## Schema

Empty object


Saving "generated/routes/native/get_create_account_pow_policy/GetCreateAccountPowPolicyRequest.md"
Processing GetCreateAccountPowPolicyResponse [routes/native/get_create_account_pow_policy]
Processing schema for GetCreateAccountPowPolicyResponse
Schema(
    Object {
        "$schema": String("https://json-schema.org/draft/2020-12/schema"),
        "description": String("Returns the number of POW iterations required to create an account"),
        "properties": Object {
            "required": Object {
                "format": String("uint32"),
                "minimum": Number(0),
                "type": String("integer"),
            },
        },
        "required": Array [
            String("required"),
        ],
        "title": String("GetCreateAccountPowPolicyResponse"),
        "type": String("object"),
    },
)
# GetCreateAccountPowPolicyResponse

Returns the number of POW iterations required to create an account

## Schema

| Property | Required | Type | Constraints |
| --- | --- | --- | --- |
| `required` | ✅ | `Integer` | `uint32` - Bounds: [0, -] | 



Saving "generated/routes/native/get_create_account_pow_policy/GetCreateAccountPowPolicyResponse.md"
Processing GetEmailsRequest [routes/native/get_emails]
Processing schema for GetEmailsRequest
Schema(
    Object {
        "$schema": String("https://json-schema.org/draft/2020-12/schema"),
        "description": String("GET: Requests a user's emails\n\nAUTH: Requires an access token as the bearer token"),
        "properties": Object {
            "since_id": Object {
                "format": String("int32"),
                "type": String("integer"),
            },
        },
        "required": Array [
            String("since_id"),
        ],
        "title": String("GetEmailsRequest"),
        "type": String("object"),
    },
)
# GetEmailsRequest

GET: Requests a user's emails

AUTH: Requires an access token as the bearer token

## Schema

| Property | Required | Type | Constraints |
| --- | --- | --- | --- |
| `since_id` | ✅ | `Integer` | `int32` | 



Saving "generated/routes/native/get_emails/GetEmailsRequest.md"
Processing GetEmailsEmail [routes/native/get_emails]
Processing schema for GetEmailsEmail
Schema(
    Object {
        "$defs": Object {
            "PowClassification": Object {
                "description": String("Represents a classification in the `PowPolicy`"),
                "enum": Array [
                    String("Minimum"),
                    String("Accepted"),
                    String("Personal"),
                ],
                "type": String("string"),
            },
        },
        "$schema": String("https://json-schema.org/draft/2020-12/schema"),
        "description": String("An individual email in a user's inbox"),
        "properties": Object {
            "email": Object {
                "type": String("string"),
            },
            "pow_classification": Object {
                "$ref": String("#/$defs/PowClassification"),
            },
            "source": Object {
                "type": String("string"),
            },
        },
        "required": Array [
            String("source"),
            String("email"),
            String("pow_classification"),
        ],
        "title": String("GetEmailsEmail"),
        "type": String("object"),
    },
)
# GetEmailsEmail

An individual email in a user's inbox

## Schema

| Property | Required | Type | Constraints |
| --- | --- | --- | --- |
| `email` | ✅ | `String` |     | 
| `pow_classification` | ✅ | [[PowClassification]] |     | 
| `source` | ✅ | `String` |     | 



Saving "generated/routes/native/get_emails/GetEmailsEmail.md"
Processing GetEmailsResponseAuthed [routes/native/get_emails]
Processing schema for GetEmailsResponseAuthed
Schema(
    Object {
        "$defs": Object {
            "GetEmailsEmail": Object {
                "description": String("An individual email in a user's inbox"),
                "properties": Object {
                    "email": Object {
                        "type": String("string"),
                    },
                    "pow_classification": Object {
                        "$ref": String("#/$defs/PowClassification"),
                    },
                    "source": Object {
                        "type": String("string"),
                    },
                },
                "required": Array [
                    String("source"),
                    String("email"),
                    String("pow_classification"),
                ],
                "type": String("object"),
            },
            "PowClassification": Object {
                "description": String("Represents a classification in the `PowPolicy`"),
                "enum": Array [
                    String("Minimum"),
                    String("Accepted"),
                    String("Personal"),
                ],
                "type": String("string"),
            },
        },
        "$schema": String("https://json-schema.org/draft/2020-12/schema"),
        "description": String("Returns the emails in a user's inbox"),
        "items": Object {
            "$ref": String("#/$defs/GetEmailsEmail"),
        },
        "title": String("GetEmailsResponseAuthed"),
        "type": String("array"),
    },
)
# GetEmailsResponseAuthed

Returns the emails in a user's inbox

## Schema

| Type | Constraints |
| --- | --- |
| `Array` | With items of type [[GetEmailsEmail]] |


Saving "generated/routes/native/get_emails/GetEmailsResponseAuthed.md"
Processing GetEmailsResponse [routes/native/get_emails]
Processing schema for GetEmailsResponse
Schema(
    Object {
        "$defs": Object {
            "GetEmailsEmail": Object {
                "description": String("An individual email in a user's inbox"),
                "properties": Object {
                    "email": Object {
                        "type": String("string"),
                    },
                    "pow_classification": Object {
                        "$ref": String("#/$defs/PowClassification"),
                    },
                    "source": Object {
                        "type": String("string"),
                    },
                },
                "required": Array [
                    String("source"),
                    String("email"),
                    String("pow_classification"),
                ],
                "type": String("object"),
            },
            "GetEmailsResponseAuthed": Object {
                "description": String("Returns the emails in a user's inbox"),
                "items": Object {
                    "$ref": String("#/$defs/GetEmailsEmail"),
                },
                "type": String("array"),
            },
            "PowClassification": Object {
                "description": String("Represents a classification in the `PowPolicy`"),
                "enum": Array [
                    String("Minimum"),
                    String("Accepted"),
                    String("Personal"),
                ],
                "type": String("string"),
            },
        },
        "$schema": String("https://json-schema.org/draft/2020-12/schema"),
        "description": String("A wrapper around a response indicating whether a request that requires authorisation was\nsuccessful.\n\nSee `Success`'s value for the underlying type."),
        "oneOf": Array [
            Object {
                "enum": Array [
                    String("Unauthorized"),
                ],
                "type": String("string"),
            },
            Object {
                "additionalProperties": Bool(false),
                "properties": Object {
                    "Success": Object {
                        "$ref": String("#/$defs/GetEmailsResponseAuthed"),
                    },
                },
                "required": Array [
                    String("Success"),
                ],
                "type": String("object"),
            },
        ],
        "title": String("Authorized"),
    },
)
# GetEmailsResponse (Authorized)

A wrapper around a response indicating whether a request that requires authorisation was
successful.

See `Success`'s value for the underlying type.

## Schema

| Type | Constraints |
| --- | --- |
| `String` | One of: `Unauthorized` |

*OR*

| Property | Required | Type | Constraints |
| --- | --- | --- | --- |
| `Success` | ✅ | [[GetEmailsResponseAuthed]] |     | 



Saving "generated/routes/native/get_emails/GetEmailsResponse.md"
Processing AuthenticateRequest [routes/auth/authenticate]
Processing schema for AuthenticateRequest
Schema(
    Object {
        "$schema": String("https://json-schema.org/draft/2020-12/schema"),
        "description": String("POST: Requests an access token using a username and password"),
        "properties": Object {
            "password": Object {
                "type": String("string"),
            },
            "username": Object {
                "type": String("string"),
            },
        },
        "required": Array [
            String("username"),
            String("password"),
        ],
        "title": String("AuthenticateRequest"),
        "type": String("object"),
    },
)
# AuthenticateRequest

POST: Requests an access token using a username and password

## Schema

| Property | Required | Type | Constraints |
| --- | --- | --- | --- |
| `password` | ✅ | `String` |     | 
| `username` | ✅ | `String` |     | 



Saving "generated/routes/auth/authenticate/AuthenticateRequest.md"
Processing AuthenticateResponse [routes/auth/authenticate]
Processing schema for AuthenticateResponse
Schema(
    Object {
        "$defs": Object {
            "AuthTokenDataField": Object {
                "description": String("An `AuthToken` with attached expiry time"),
                "properties": Object {
                    "expires_at": Object {
                        "$ref": String("#/$defs/SystemTimeField"),
                    },
                    "token": Object {
                        "$ref": String("#/$defs/AuthTokenField"),
                    },
                },
                "required": Array [
                    String("token"),
                    String("expires_at"),
                ],
                "type": String("object"),
            },
            "AuthTokenField": Object {
                "description": String("Represents a base-64 encoded authentication token - you will not need to decode this.\nUsed in bearer tokens and in some requests."),
                "type": String("string"),
            },
            "SystemTimeField": Object {
                "description": String("A timestamp represented as milliseconds since epoch"),
                "format": String("uint128"),
                "minimum": Number(0),
                "type": String("integer"),
            },
        },
        "$schema": String("https://json-schema.org/draft/2020-12/schema"),
        "description": String("Returns a refresh token if successful"),
        "oneOf": Array [
            Object {
                "enum": Array [
                    String("Failure"),
                ],
                "type": String("string"),
            },
            Object {
                "additionalProperties": Bool(false),
                "properties": Object {
                    "Success": Object {
                        "$ref": String("#/$defs/AuthTokenDataField"),
                    },
                },
                "required": Array [
                    String("Success"),
                ],
                "type": String("object"),
            },
        ],
        "title": String("AuthenticateResponse"),
    },
)
# AuthenticateResponse

Returns a refresh token if successful

## Schema

| Type | Constraints |
| --- | --- |
| `String` | One of: `Failure` |

*OR*

| Property | Required | Type | Constraints |
| --- | --- | --- | --- |
| `Success` | ✅ | [[AuthTokenDataField]] |     | 



Saving "generated/routes/auth/authenticate/AuthenticateResponse.md"
Processing RefreshAccessRequest [routes/auth/refresh_access]
Processing schema for RefreshAccessRequest
Schema(
    Object {
        "$defs": Object {
            "AuthTokenField": Object {
                "description": String("Represents a base-64 encoded authentication token - you will not need to decode this.\nUsed in bearer tokens and in some requests."),
                "type": String("string"),
            },
        },
        "$schema": String("https://json-schema.org/draft/2020-12/schema"),
        "description": String("POST: Requests a new access token authorised by a refresh token"),
        "properties": Object {
            "refresh_token": Object {
                "$ref": String("#/$defs/AuthTokenField"),
            },
        },
        "required": Array [
            String("refresh_token"),
        ],
        "title": String("RefreshAccessRequest"),
        "type": String("object"),
    },
)
# RefreshAccessRequest

POST: Requests a new access token authorised by a refresh token

## Schema

| Property | Required | Type | Constraints |
| --- | --- | --- | --- |
| `refresh_token` | ✅ | [[AuthTokenField]] |     | 



Saving "generated/routes/auth/refresh_access/RefreshAccessRequest.md"
Processing RefreshAccessResponse [routes/auth/refresh_access]
Processing schema for RefreshAccessResponse
Schema(
    Object {
        "$defs": Object {
            "AuthTokenDataField": Object {
                "description": String("An `AuthToken` with attached expiry time"),
                "properties": Object {
                    "expires_at": Object {
                        "$ref": String("#/$defs/SystemTimeField"),
                    },
                    "token": Object {
                        "$ref": String("#/$defs/AuthTokenField"),
                    },
                },
                "required": Array [
                    String("token"),
                    String("expires_at"),
                ],
                "type": String("object"),
            },
            "AuthTokenField": Object {
                "description": String("Represents a base-64 encoded authentication token - you will not need to decode this.\nUsed in bearer tokens and in some requests."),
                "type": String("string"),
            },
            "SystemTimeField": Object {
                "description": String("A timestamp represented as milliseconds since epoch"),
                "format": String("uint128"),
                "minimum": Number(0),
                "type": String("integer"),
            },
        },
        "$schema": String("https://json-schema.org/draft/2020-12/schema"),
        "description": String("Returns an access token on success"),
        "oneOf": Array [
            Object {
                "enum": Array [
                    String("Failure"),
                    String("BadRequest"),
                ],
                "type": String("string"),
            },
            Object {
                "additionalProperties": Bool(false),
                "properties": Object {
                    "Success": Object {
                        "$ref": String("#/$defs/AuthTokenDataField"),
                    },
                },
                "required": Array [
                    String("Success"),
                ],
                "type": String("object"),
            },
        ],
        "title": String("RefreshAccessResponse"),
    },
)
# RefreshAccessResponse

Returns an access token on success

## Schema

| Type | Constraints |
| --- | --- |
| `String` | One of: `Failure`, `BadRequest` |

*OR*

| Property | Required | Type | Constraints |
| --- | --- | --- | --- |
| `Success` | ✅ | [[AuthTokenDataField]] |     | 



Saving "generated/routes/auth/refresh_access/RefreshAccessResponse.md"
Processing CheckAuthRequest [routes/auth/check_auth]
Processing schema for CheckAuthRequest
Schema(
    Object {
        "$schema": String("https://json-schema.org/draft/2020-12/schema"),
        "description": String("GET: Checks whether a refresh token is valid\n\nAUTH: Requires an access token as the bearer token"),
        "title": String("CheckAuthRequest"),
        "type": String("object"),
    },
)
# CheckAuthRequest

GET: Checks whether a refresh token is valid

AUTH: Requires an access token as the bearer token

## Schema

Empty object


Saving "generated/routes/auth/check_auth/CheckAuthRequest.md"
Processing CheckAuthResponseAuthed [routes/auth/check_auth]
Processing schema for CheckAuthResponseAuthed
Schema(
    Object {
        "$schema": String("https://json-schema.org/draft/2020-12/schema"),
        "description": String("Returns the name of the user, should the user be authorised"),
        "properties": Object {
            "username": Object {
                "type": String("string"),
            },
        },
        "required": Array [
            String("username"),
        ],
        "title": String("CheckAuthResponseAuthed"),
        "type": String("object"),
    },
)
# CheckAuthResponseAuthed

Returns the name of the user, should the user be authorised

## Schema

| Property | Required | Type | Constraints |
| --- | --- | --- | --- |
| `username` | ✅ | `String` |     | 



Saving "generated/routes/auth/check_auth/CheckAuthResponseAuthed.md"
Processing CheckAuthResponse [routes/auth/check_auth]
Processing schema for CheckAuthResponse
Schema(
    Object {
        "$defs": Object {
            "CheckAuthResponseAuthed": Object {
                "description": String("Returns the name of the user, should the user be authorised"),
                "properties": Object {
                    "username": Object {
                        "type": String("string"),
                    },
                },
                "required": Array [
                    String("username"),
                ],
                "type": String("object"),
            },
        },
        "$schema": String("https://json-schema.org/draft/2020-12/schema"),
        "description": String("A wrapper around a response indicating whether a request that requires authorisation was\nsuccessful.\n\nSee `Success`'s value for the underlying type."),
        "oneOf": Array [
            Object {
                "enum": Array [
                    String("Unauthorized"),
                ],
                "type": String("string"),
            },
            Object {
                "additionalProperties": Bool(false),
                "properties": Object {
                    "Success": Object {
                        "$ref": String("#/$defs/CheckAuthResponseAuthed"),
                    },
                },
                "required": Array [
                    String("Success"),
                ],
                "type": String("object"),
            },
        ],
        "title": String("Authorized"),
    },
)
# CheckAuthResponse (Authorized)

A wrapper around a response indicating whether a request that requires authorisation was
successful.

See `Success`'s value for the underlying type.

## Schema

| Type | Constraints |
| --- | --- |
| `String` | One of: `Unauthorized` |

*OR*

| Property | Required | Type | Constraints |
| --- | --- | --- | --- |
| `Success` | ✅ | [[CheckAuthResponseAuthed]] |     | 



Saving "generated/routes/auth/check_auth/CheckAuthResponse.md"
Processing WithPow [pow]
Processing schema for WithPow
Schema(
    Object {
        "$defs": Object {
            "BigUintField": Object {
                "description": String("A base-64 (standard alphabet, with padding) little-endian encoding of a large unsigned integer"),
                "type": String("string"),
            },
            "T": Object {
                "description": String("Represents a generic type"),
                "type": String("object"),
            },
        },
        "$schema": String("https://json-schema.org/draft/2020-12/schema"),
        "description": String("A wrapper around a request requiring a proof-of-work (POW). The `token` is obtained from a\n`GetPowTokenRequest`. Some hash of `inner` is squared `iters` times (modulo `token`) to obtain\n`pow_result`.\n\nSee `inner`'s value for the underlying type."),
        "properties": Object {
            "inner": Object {
                "$ref": String("#/$defs/T"),
            },
            "iters": Object {
                "format": String("uint32"),
                "minimum": Number(0),
                "type": String("integer"),
            },
            "pow_result": Object {
                "$ref": String("#/$defs/BigUintField"),
            },
            "token": Object {
                "$ref": String("#/$defs/BigUintField"),
            },
        },
        "required": Array [
            String("inner"),
            String("iters"),
            String("token"),
            String("pow_result"),
        ],
        "title": String("WithPow"),
        "type": String("object"),
    },
)
# WithPow

A wrapper around a request requiring a proof-of-work (POW). The `token` is obtained from a
`GetPowTokenRequest`. Some hash of `inner` is squared `iters` times (modulo `token`) to obtain
`pow_result`.

See `inner`'s value for the underlying type.

## Schema

| Property | Required | Type | Constraints |
| --- | --- | --- | --- |
| `inner` | ✅ | [[T]] |     | 
| `iters` | ✅ | `Integer` | `uint32` - Bounds: [0, -] | 
| `pow_result` | ✅ | [[BigUintField]] |     | 
| `token` | ✅ | [[BigUintField]] |     | 



Saving "generated/pow/WithPow.md"
Processing T []
Processing schema for T
Schema(
    Object {
        "$schema": String("https://json-schema.org/draft/2020-12/schema"),
        "description": String("Represents a generic type"),
        "title": String("T"),
        "type": String("object"),
    },
)
# T

Represents a generic type

## Schema

Empty object


Saving "generated/T.md"
